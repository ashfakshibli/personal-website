name: Deploy to Namecheap

on:
  push:
    branches: [ main ]

jobs:
  deploy:
    runs-on: ubuntu-latest
    
    steps:
    - uses: actions/checkout@v2
    
    - name: Use Node.js
      uses: actions/setup-node@v2
      with:
        node-version: '20'
        
    - name: Install dependencies and build
      run: |
        export NODE_OPTIONS="--max_old_space_size=4096"
        npm ci
        npm run build
        
    - name: Prepare deployment
      run: |
        mkdir -p deploy
        cp -r .next deploy/
        cp -r public deploy/
        cp -r src deploy/
        cp package.json package-lock.json next.config.ts tsconfig.json deploy/
        
        # Create server.js
        cat << 'EOF' > deploy/server.js
        const { createServer } = require('http')
        const { parse } = require('url')
        const next = require('next')
        
        const dev = process.env.NODE_ENV !== 'production'
        const app = next({ dev })
        const handle = app.getRequestHandler()
        
        app.prepare().then(() => {
          createServer((req, res) => {
            const parsedUrl = parse(req.url, true)
            handle(req, res, parsedUrl)
          }).listen(3000, (err) => {
            if (err) throw err
            console.log('> Ready on http://localhost:3000')
          })
        })
        EOF
        
        # Create .htaccess
        cat << 'EOF' > deploy/.htaccess
        # DO NOT REMOVE. CLOUDLINUX PASSENGER CONFIGURATION BEGIN
        PassengerAppRoot "/home/ashfrewu/personal-website"
        PassengerBaseURI "/"
        PassengerNodejs "/home/ashfrewu/nodevenv/personal-website/20/bin/node"
        PassengerAppType node
        PassengerStartupFile server.js
        # DO NOT REMOVE. CLOUDLINUX PASSENGER CONFIGURATION END
        EOF
        
        cd deploy
        zip -r ../deploy.zip .
        cd ..
        
    - name: Setup SSH and deploy
      run: |
        # Setup SSH
        mkdir -p ~/.ssh
        echo "${{ secrets.SSH_PRIVATE_KEY }}" > ~/.ssh/deploy_key
        chmod 600 ~/.ssh/deploy_key
        ssh-keyscan -p ${{ secrets.SSH_PORT }} ${{ secrets.SSH_HOST }} >> ~/.ssh/known_hosts
        
        # Upload file
        echo "Uploading deploy.zip..."
        scp -P ${{ secrets.SSH_PORT }} -i ~/.ssh/deploy_key deploy.zip ${{ secrets.SSH_USER }}@${{ secrets.SSH_HOST }}:/home/ashfrewu/personal-website/
        
        # Execute deployment commands
        ssh -p ${{ secrets.SSH_PORT }} -i ~/.ssh/deploy_key ${{ secrets.SSH_USER }}@${{ secrets.SSH_HOST }} << 'ENDSSH'
          cd /home/ashfrewu/personal-website || exit 1
          echo "Current directory: $(pwd)"
          
          # First extract the new files to a temporary directory
          mkdir -p temp
          cd temp
          unzip -o ../deploy.zip
          cd ..
          
          # Now remove everything from the root directory
          rm -rf *
          
          # Move files from temp back to root
          mv temp/* .
          rm -rf temp
          
          # Set correct permissions
          chmod 755 .
          chmod 644 .htaccess
          chmod -R 755 .next public src
          
          echo "Deployment completed. Files in directory:"
          ls -la
          
          exit
        ENDSSH
        
        echo "Deployment completed successfully!"