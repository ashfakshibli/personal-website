name: Deploy to Namecheap

on:
  push:
    branches: [ main ]

jobs:
  deploy:
    runs-on: ubuntu-latest
    
    steps:
    - uses: actions/checkout@v2
    
    - name: Use Node.js
      uses: actions/setup-node@v2
      with:
        node-version: '20'
        
    - name: Install dependencies
      run: npm ci
      
    - name: Build
      run: npm run build
        
    - name: Prepare deployment
      run: |
        # Create deployment directory
        mkdir -p deploy
        
        # Copy necessary files
        cp -r .next deploy/
        cp -r public deploy/
        cp -r src deploy/
        cp package.json package-lock.json next.config.ts tsconfig.json deploy/
        
        # Create server.js
        cat << 'EOF' > deploy/server.js
        const { createServer } = require('http')
        const { parse } = require('url')
        const next = require('next')
        
        const dev = process.env.NODE_ENV !== 'production'
        const app = next({ dev })
        const handle = app.getRequestHandler()
        
        app.prepare().then(() => {
          createServer((req, res) => {
            const parsedUrl = parse(req.url, true)
            handle(req, res, parsedUrl)
          }).listen(3000, (err) => {
            if (err) throw err
            console.log('> Ready on http://localhost:3000')
          })
        })
        EOF
        
        # Create .htaccess
        cat << 'EOF' > deploy/.htaccess
        # DO NOT REMOVE. CLOUDLINUX PASSENGER CONFIGURATION BEGIN
        PassengerAppRoot "/home/ashfrewu/personal-website"
        PassengerBaseURI "/"
        PassengerNodejs "/home/ashfrewu/nodevenv/personal-website/20/bin/node"
        PassengerAppType node
        PassengerStartupFile server.js
        # DO NOT REMOVE. CLOUDLINUX PASSENGER CONFIGURATION END
        EOF
        
        # Create deployment package
        cd deploy
        zip -r ../deploy.zip .
        cd ..

    - name: Setup SSH
      run: |
        mkdir -p ~/.ssh
        echo "${{ secrets.SSH_PRIVATE_KEY }}" > ~/.ssh/deploy_key
        chmod 600 ~/.ssh/deploy_key
        ssh-keyscan -p ${{ secrets.SSH_PORT }} ${{ secrets.SSH_HOST }} >> ~/.ssh/known_hosts
    
    - name: Deploy to Server
      run: |
        # Upload deployment package
        scp -P ${{ secrets.SSH_PORT }} -i ~/.ssh/deploy_key deploy.zip ${{ secrets.SSH_USER }}@${{ secrets.SSH_HOST }}:/home/ashfrewu/personal-website/
        
        # Execute deployment commands
        ssh -p ${{ secrets.SSH_PORT }} -i ~/.ssh/deploy_key ${{ secrets.SSH_USER }}@${{ secrets.SSH_HOST }} << 'ENDSSH'
          cd /home/ashfrewu/personal-website
          unzip -o deploy.zip
          rm deploy.zip
          source /home/ashfrewu/nodevenv/personal-website/20/bin/activate
          npm ci --production --quiet
          exit
        ENDSSH